@model LocationFilterViewModel

@{
  ViewBag.Title = $"Find courses by location or by training provider";
  var isInWizard = ViewBag.IsInWizard == true;
  var selectedRadius = (Model.FilterModel.rad.HasValue) ? Model.FilterModel.rad : (int)RadiusOption.TwentyMiles;
}

@if (!isInWizard)
{
  <div class="govuk-width-container">
    @await Html.PartialAsync("Back", new BackLinkViewModel { Href = Url.Action("Index", "Results", Model.FilterModel.ToRouteValues()), Title = "Back to search results" })
  </div>
}

<main class="govuk-main-wrapper" id="main-content" role="main">
  <div class="govuk-width-container">
    <div class="govuk-grid-row">
      <div class="govuk-grid-column-two-thirds">
        @await Html.PartialAsync("Error", Model.Errors)

        <form action='@Url.Action(isInWizard ? "LocationWizard" : "Location", "Filter", Model.FilterModel.ToRouteValues())' method="POST" data-ga-event-form="Location">
          <fieldset role="radiogroup" aria-required="true" class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">
              <h1 class="govuk-heading-xl">Find courses by location or by training provider</h1>
            </legend>

            <div class="govuk-form-group @(Model.Errors.HasError(" l ") ? "govuk-form-group--error" : " ")" id="l-container">

              @if (@Model.Errors.HasError("l")) {
                <span class="govuk-error-message">@Model.Errors.GetError("l").Message</span>
              }

              <div class="govuk-radios" data-module="radios">
                <div class="govuk-radios__item">
                  <input id="location-Set" class="govuk-radios__input" type="radio" name="l" value="@((int)LocationOption.Yes)" checked="@(Model.FilterModel.LocationOption == LocationOption.Yes)" data-aria-controls="lq-container" data-ga-event-form-input="By postcode/city">
                  <label for="location-Set" class="govuk-label govuk-radios__label">
                    By postcode, town or city
                  </label>
                </div>

                <div class="govuk-radios__conditional govuk-radios__conditional--hidden @(Model.Errors.HasError(" lq ") ? "form-group---error " : " ")" id="lq-container">
                  <div class="govuk-form-group">
                    <label class="govuk-label" for="location">
                      Postcode, town or city
                      @if (@Model.Errors.HasError("lq")) {
                        <span class="govuk-error-message">@Model.Errors.GetError("lq").Message</span>
                      }
                    </label>
                    <input class="govuk-input" data-url="@Url.Action("LocationSuggest", "Dynamic")" name="lq" type="text" id="location" value="@Model.FilterModel.lq">
                    <div id="location-autocomplete"></div>
                  </div>
                  <div class="govuk-form-group">
                    <label class="govuk-label" for="radius">Within</label>
                    <select class="govuk-select govuk-!-width-one-half" id="radius" name="rad">
                      @foreach(int option in Enum.GetValues(typeof(RadiusOption)))
                        {
                          if (option == selectedRadius) {
                            <option value="@(option)" selected="selected" >@(option) miles</option>
                          }
                          else
                          {
                            <option value="@(option)" >@(option) miles</option>
                          }
                        }
                    </select>
                  </div>
                </div>

                <div class="govuk-radios__item">
                  <input id="location-Unset" class="govuk-radios__input" type="radio" name="l" value="@((int)LocationOption.No)" checked="@(Model.FilterModel.LocationOption == LocationOption.No)" data-ga-event-form-input="Across England">
                  <label for="location-Unset" class="govuk-label govuk-radios__label">Across England</label>
                </div>

                <div class="govuk-radios__divider">or</div>

                <div class="govuk-radios__item">
                  <input id="location-Specific" class="govuk-radios__input" type="radio" name="l" value="@((int)LocationOption.Specific)" checked="@(Model.FilterModel.LocationOption == LocationOption.Specific)" data-aria-controls="query-container" data-ga-event-form-input="By school/provider">
                  <label for="location-Specific" class="govuk-label govuk-radios__label">
                    By school, university or other training provider
                  </label>
                </div>

                <div class="govuk-radios__conditional govuk-radios__conditional--hidden @(Model.Errors.HasError(" query ") ? "form-group--error " : " ")" id="query-container">
                  <div class"form-group">
                    <label class="govuk-label" for="query">
                      School, university or other training provider
                      @if (@Model.Errors.HasError("query")) {
                        <span class="govuk-error-message">@Model.Errors.GetError("query").Message</span>
                      }
                    </label>
                    <span class="govuk-hint">Enter the name or provider code</span>
                    <input class="govuk-input" data-url="@Url.Action("ProviderSuggest", "Dynamic")" name="query" type="text" id="query" value="@Model.FilterModel.query">
                    <div id="provider-autocomplete"></div>
                  </div>
                </div>
              </div>
            </div>
          </fieldset>

          <div class="govuk-form-group">
            <input class="govuk-button" type="submit" value="@(isInWizard ? "Continue" : "Find courses")">
          </div>
        </form>
      </div>
    </div>
  </div>
</main>
