@model ResultsViewModel

<div class="search-results-header">
  <p class="search-results-header__count govuk-body">@string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:n0}", Model.Courses.TotalCount) courses found</p>
  <p class="search-results-header__new-search govuk-body">
    <a href='@Url.Action("LocationWizard", "Filter")' class="govuk-link">New search</a>
  </p>
  @Html.Partial("SortBy", Model)
</div>

<ul class="govuk-list search-results">
  @foreach (var item in Model.Courses.Items) {
    var subjects = @item.CourseSubjects.Select(courseSubject => courseSubject.Subject.Name).ToArray();
    <li>
      <h3 class="govuk-heading-m">
        <a href='@Url.Action("Index", "Course", new {courseCode = item.ProgrammeCode, providerCode = item.Provider.ProviderCode})' class="link">@item.Name at @item.Provider.Name</a>
      </h3>
      <dl class="govuk-list--description">
        @if(!string.IsNullOrEmpty(item.Mod) && item.Mod.Length > 1)
        {
          <dt class="govuk-list--description__label">Course offered</dt>
          <dd>@item.Mod</dd>
        }
        @if (!string.IsNullOrEmpty(item.AccreditingProvider?.Name))
        {
          <dt class="govuk-list--description__label">Accredited provider</dt>
          <dd>@item.AccreditingProvider.Name</dd>
        }
        @if (item.Distance != null) {
          <dt class="govuk-list--description__label">Distance</dt>
          <dd>@item.FormattedDistance()</dd>
        }
        @if (item.ProviderLocation != null) {
          <dt class="govuk-list--description__label">School address</dt>
          <dd>@item.ProviderLocation.Address</dd>
        }
        <dt class="govuk-list--description__label">Financial support</dt>
        <dd>@item.FundingOptions()</dd>
      </dl>
    </li>
  }
</ul>
@Html.Partial("Pagination", Model)
